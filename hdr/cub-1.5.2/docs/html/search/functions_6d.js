var searchData=
[
  ['max',['Max',['../structcub_1_1_device_reduce.html#a974a241463ca892c8f5e73b879065e48',1,'cub::DeviceReduce::Max()'],['../structcub_1_1_device_segmented_reduce.html#aa1f982f913c95d9974412b8fc0995183',1,'cub::DeviceSegmentedReduce::Max()']]],
  ['min',['Min',['../structcub_1_1_device_reduce.html#a14d9c12a1beb9a04f77e903d07fa596a',1,'cub::DeviceReduce::Min()'],['../structcub_1_1_device_segmented_reduce.html#a2fb8a073bb504afd0e05cd06d008ec29',1,'cub::DeviceSegmentedReduce::Min()']]],
  ['multihistogrameven',['MultiHistogramEven',['../structcub_1_1_device_histogram.html#a917e507d773ef1b11424ed8bc49e4d95',1,'cub::DeviceHistogram::MultiHistogramEven(void *d_temp_storage, size_t &amp;temp_storage_bytes, SampleIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT lower_level[NUM_ACTIVE_CHANNELS], LevelT upper_level[NUM_ACTIVE_CHANNELS], OffsetT num_pixels, cudaStream_t stream=0, bool debug_synchronous=false)'],['../structcub_1_1_device_histogram.html#a309c2e30bd62935e1cfcd623fb04b668',1,'cub::DeviceHistogram::MultiHistogramEven(void *d_temp_storage, size_t &amp;temp_storage_bytes, SampleIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT lower_level[NUM_ACTIVE_CHANNELS], LevelT upper_level[NUM_ACTIVE_CHANNELS], OffsetT num_row_pixels, OffsetT num_rows, size_t row_stride_bytes, cudaStream_t stream=0, bool debug_synchronous=false)']]],
  ['multihistogramrange',['MultiHistogramRange',['../structcub_1_1_device_histogram.html#a77511d5ae7cc53f0b5c984fd32ad29fe',1,'cub::DeviceHistogram::MultiHistogramRange(void *d_temp_storage, size_t &amp;temp_storage_bytes, SampleIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT *d_levels[NUM_ACTIVE_CHANNELS], OffsetT num_pixels, cudaStream_t stream=0, bool debug_synchronous=false)'],['../structcub_1_1_device_histogram.html#a5926ff12b29d9e8e67ecf2684071542f',1,'cub::DeviceHistogram::MultiHistogramRange(void *d_temp_storage, size_t &amp;temp_storage_bytes, SampleIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT *d_levels[NUM_ACTIVE_CHANNELS], OffsetT num_row_pixels, OffsetT num_rows, size_t row_stride_bytes, cudaStream_t stream=0, bool debug_synchronous=false)']]]
];
